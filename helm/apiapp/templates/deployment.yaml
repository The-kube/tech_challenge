apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "apiapp.fullname" . }}-api
  labels:
    app: flask-api
  {{- include "apiapp.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.api.replicas }}
  selector:
    matchLabels:
      app: flask-api
    {{- include "apiapp.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: flask-api
      {{- include "apiapp.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: DB_URL
          value: {{ quote .Values.api.flaskApi.env.dbUrl }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.api.flaskApi.image.repository }}:{{ .Values.api.flaskApi.image.tag
          | default .Chart.AppVersion }}
        name: flask-api
        ports:
        - containerPort: 6000
        resources: {}
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "apiapp.fullname" . }}-db
  labels:
    app: flask-db
  {{- include "apiapp.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.db.replicas }}
  selector:
    matchLabels:
      app: flask-db
    {{- include "apiapp.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: flask-db
      {{- include "apiapp.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          value: {{ quote .Values.db.flaskDb.env.postgresDb }}
        - name: POSTGRES_PASSWORD
          value: {{ quote .Values.db.flaskDb.env.postgresPassword }}
        - name: POSTGRES_USER
          value: {{ quote .Values.db.flaskDb.env.postgresUser }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.db.flaskDb.image.repository }}:{{ .Values.db.flaskDb.image.tag
          | default .Chart.AppVersion }}
        name: flask-db
        ports:
        - containerPort: 5432
        resources: {}
        volumeMounts:
        - mountPath: ./data
          name: flask-db-claim0
      restartPolicy: Always
      volumes:
      - name: flask-db-claim0
        persistentVolumeClaim:
          claimName: {{ include "apiapp.fullname" . }}-db-claim0